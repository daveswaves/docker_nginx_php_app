# Set up PHP (8.2-fpm), Nginx (latest), MySQL (8.0) and PhpMyAdmin.

version: '3.9'
services:
  # PHP-FPM Service
  php-fpm:
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
    # Mounts the local 'app' directory to the container's Nginx root
      - ./app:/var/www/html 
    depends_on:
      - mysql-db 

  # NGINX Service
  nginx:
    build:
      context: .
      dockerfile: ./nginx/Dockerfile
    volumes:
    # Mountlocal 'app' directory to the Nginx root
      - ./app:/var/www/html 
    ports:
      - "8080:80"
    depends_on:
      - php-fpm  # Depends on the PHP-FPM service
      - mysql-db  # Depends on the MySQL database service

  # MySQL Database Service
  mysql-db:
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: "${DB_PASS}"
      MYSQL_DATABASE: "${DB_NAME}"
      MYSQL_USER: "${DB_USER}"
      MYSQL_PASSWORD: "${DB_PASS}"
    ports:
    # Maps port 3307 on the host to port 3306 on the MySQL container
      - "3307:3306"
    volumes:
      # Persist DB data outside of the container
      - data:/var/lib/mysql

  # PHPMyAdmin Service
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    links:
    # Links the PHPMyAdmin service to the MySQL database service
      - mysql-db 
    ports:
      - "8081:80"
    environment:
      PMA_HOST: mysql-db
      # Use MySQL root password for PHPMyAdmin
      MYSQL_ROOT_PASSWORD: "${DB_PASS}"

volumes:
  data:

# http://localhost:8081 to access PHPMyAdmin page.
# User can be 'db_user' or 'root'

# This assumes that you deployed php/nginx/mysql first (see docker-compose_02.yml).
# After running, "Ctrl+C" to stop, then "docker compose down", before running
# docker compose up --build again.
# "app/index.php" connects to the database.
# http://localhost:8080 should display "PHP Connected to MySQL successfully" if everything is working.

# cd to ~/docker/nginx_php_app, then run the following command to build and run your container:
# docker compose up --build
# https://thriveread.com/deploying-php-fpm-nginx-and-mysql-with-docker-compose/

# The following tutorial codes a web page form to insert DB data.
# https://thriveread.com/apache-php-with-docker-mysql-and-phpmyadmin/

# Nginx Mastery | Docker https://youtu.be/7tGhir27ZJo | https://www.youtube.com/playlist?list=PLOLrQ9Pn6cawvMA5JjhzoQrnKbYGYQqx1
# https://hub.docker.com/_/nginx
